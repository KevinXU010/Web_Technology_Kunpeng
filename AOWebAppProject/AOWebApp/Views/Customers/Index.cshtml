@model AOWebApp.Models.ViewModels.CustomerSearchViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Index";
}

<div class="bg-secondary-subtle py-1 px-2 mb-2 rounded">
    <h1 class="text-center">Customer Search</h1>
</div>

<form asp-action="Index" method="get" class="row g-2 mb-3">
    <div class="col-md-5">
        <input asp-for="SearchText" id="SearchText" name="SearchText" class="form-control" placeholder="Customer name..." />
    </div>

    <div class="col-md-4">
        <select asp-for="Suburb" id="Suburb" name="Suburb" class="form-select" asp-items="Model.SuburbList">
            <option value="">All Suburbs...</option>
        </select>
    </div>

    <div class="col-md-3">
        <button type = "submit" class="btn btn-primary">Search</button>
        <a asp-action="Index" class="btn btn-outline-secondary">Reset</a>
        <a asp-action="Create" class="btn btn-outline-secondary ms-1">Create New</a>
    </div>
</form>
<p class="mb-2 @(Model.HasResults ? "" : (Model.HasFilter ? "text-danger" : "text-muted"))">
    @Model.StatusMessage
</p>


@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MainPhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SecondaryPhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MainPhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SecondaryPhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address.AddressId)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CustomerId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.CustomerId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.CustomerId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
 *@
@if (Model.HasResults)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>MainPhoneNumber</th>
                <th>SecondaryPhoneNumber</th>
                <th>Address</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in Model.CustomerList)
            {
                <tr>
                    <td>@c.FirstName</td>
                    <td>@c.LastName</td>
                    <td>@c.Email</td>
                    <td>@c.MainPhoneNumber</td>
                    <td>@c.SecondaryPhoneNumber</td>
                    <td>@c.Address.AddressLine</td>
                    <td>@c.Address.Suburb</td>
                    <td>@c.Address.Postcode</td>
                    <td>@c.Address.Region</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@c.CustomerId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@c.CustomerId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@c.CustomerId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}